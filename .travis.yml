language: cpp

matrix:
  include:
  - os: linux
    sudo: required
    services:
      - docker
    compiler: gcc
    env:
      - SYSTEM_VERSION=xenial
      - REPOSITORY=v3.15.10-utopic
      - KERNEL_VERSION=3.15.10-031510
      - KERNEL_VERSION_C=201408132333
      - export USE_QEMU=1
  - os: linux
    sudo: required
    services:
      - docker
    compiler: gcc
    env:
      - SYSTEM_VERSION=xenial
      - REPOSITORY=v3.16.57
      - KERNEL_VERSION=3.16.57-031657
      - KERNEL_VERSION_C=201806170831
      - export USE_QEMU=1
  - os: linux
    sudo: required
    services:
      - docker
    compiler: gcc
    env:
      - SYSTEM_VERSION=xenial
      - REPOSITORY=v3.17.8-vivid
      - KERNEL_VERSION=3.17.8-031708
      - KERNEL_VERSION_C=201501081837
      - export USE_QEMU=1
  - os: linux
    sudo: required
    services:
      - docker
    compiler: gcc
    env:
      - SYSTEM_VERSION=xenial
      - REPOSITORY=v3.18.119
      - KERNEL_VERSION=3.18.119-0318119
      - KERNEL_VERSION_C=201808171540
      - export USE_QEMU=1
  - os: linux
    sudo: required
    services:
      - docker
    compiler: gcc
    env:
      - SYSTEM_VERSION=xenial
      - REPOSITORY=v3.19.8-vivid
      - KERNEL_VERSION=3.19.8-031908
      - KERNEL_VERSION_C=201505110938
      - export USE_QEMU=1
  - os: linux
    sudo: required
    services:
      - docker
    compiler: gcc
    env:
      - SYSTEM_VERSION=xenial
      - REPOSITORY=v4.0.1-wily
      - KERNEL_VERSION=4.0.1-040001
      - KERNEL_VERSION_C=201505081133
      - export USE_QEMU=1
  - os: linux
    sudo: required
    services:
      - docker
    compiler: gcc
    env:
      - SYSTEM_VERSION=xenial
      - REPOSITORY=v4.1.28
      - KERNEL_VERSION=4.1.28-040128
      - KERNEL_VERSION_C=201607131931
  - os: linux
    sudo: required
    services:
      - docker
    compiler: gcc
    env:
      - SYSTEM_VERSION=xenial
      - REPOSITORY=v4.2.4-wily
      - KERNEL_VERSION=4.2.4-040204
      - KERNEL_VERSION_C=201510261009
      - export USE_QEMU=1
  - os: linux
    sudo: required
    services:
      - docker
    compiler: gcc
    env:
      - SYSTEM_VERSION=xenial
      - REPOSITORY=v4.3.1-wily
      - KERNEL_VERSION=4.3.1-040301
      - KERNEL_VERSION_C=201512092023
      - export USE_QEMU=1
  - os: linux
    sudo: required
    services:
      - docker
    compiler: gcc
    env:
      - SYSTEM_VERSION=xenial
      - REPOSITORY=v4.4.15
      - KERNEL_VERSION=4.4.15-040415
      - KERNEL_VERSION_C=201607111333
      - export USE_QEMU=1
  - os: linux
    sudo: required
    services:
      - docker
    compiler: gcc
    env:
      - SYSTEM_VERSION=xenial
      - REPOSITORY=v4.5.4-yakkety
      - KERNEL_VERSION=4.5.4-040504
      - KERNEL_VERSION_C=201606100356
      - export USE_QEMU=1
  - os: linux
    sudo: required
    services:
      - docker
    compiler: gcc
    env:
      - SYSTEM_VERSION=xenial
      - REPOSITORY=v4.6.4
      - KERNEL_VERSION=4.6.4-040604
      - KERNEL_VERSION_C=201607111332
      - export USE_QEMU=1
  - os: linux
    sudo: required
    services:
      - docker
    compiler: gcc
    env:
      - SYSTEM_VERSION=xenial
      - REPOSITORY=v4.7.1
      - KERNEL_VERSION=4.7.1-040701
      - KERNEL_VERSION_C=201608160432
  - os: linux
    sudo: required
    services:
      - docker
    compiler: gcc
    env:
      - SYSTEM_VERSION=xenial
      - REPOSITORY=v4.8.1
      - KERNEL_VERSION=4.8.1-040801
      - KERNEL_VERSION_C=201610170913
  - os: linux
    sudo: required
    services:
      - docker
    compiler: gcc
    env:
      - SYSTEM_VERSION=xenial
      - REPOSITORY=v4.9.1
      - KERNEL_VERSION=4.9.1-040901
      - KERNEL_VERSION_C=201701060531
      - export USE_QEMU=1
  - os: linux
    sudo: required
    services:
      - docker
    compiler: gcc
    env:
      - SYSTEM_VERSION=xenial
      - REPOSITORY=v4.10.1
      - KERNEL_VERSION=4.10.1-041001
      - KERNEL_VERSION_C=201702260735
      - export USE_QEMU=1
  - os: linux
    sudo: required
    services:
      - docker
    compiler: gcc
    env:
      - SYSTEM_VERSION=xenial
      - REPOSITORY=v4.11.1
      - KERNEL_VERSION=4.11.1-041101
      - KERNEL_VERSION_C=201705140931
      - export USE_QEMU=1
  - os: linux
    sudo: required
    services:
      - docker
    compiler: gcc
    env:
      - SYSTEM_VERSION=xenial
      - REPOSITORY=v4.12.1
      - KERNEL_VERSION=4.12.1-041201
      - KERNEL_VERSION_C=201707121132
      - export USE_QEMU=1
  - os: linux
    sudo: required
    services:
      - docker
    compiler: gcc
    env:
      - SYSTEM_VERSION=xenial
      - REPOSITORY=v4.13.1
      - KERNEL_VERSION=4.13.1-041301
      - KERNEL_VERSION_C=201709100232
      - export USE_QEMU=1
  - os: linux
    sudo: required
    services:
      - docker
    compiler: gcc
    env:
      - SYSTEM_VERSION=xenial
      - REPOSITORY=v4.14.1
      - KERNEL_VERSION=4.14.1-041401
      - KERNEL_VERSION_C=201711210430
      - export USE_QEMU=1
  - os: linux
    sudo: required
    services:
      - docker
    compiler: gcc
    env:
      - SYSTEM_VERSION=xenial
      - REPOSITORY=v4.15.1
      - KERNEL_VERSION=4.15.1-041501
      - KERNEL_VERSION_C=201802031831
      - export USE_QEMU=1
  - os: linux
    sudo: required
    services:
      - docker
    compiler: gcc
    env:
      - SYSTEM_VERSION=xenial
      - REPOSITORY=v4.16.1
      - KERNEL_VERSION=4.16.1-041601
      - KERNEL_VERSION_C=201804081334
      - export USE_QEMU=1
  - os: linux
    sudo: required
    services:
      - docker
    compiler: gcc
    env:
      - SYSTEM_VERSION=bionic
      - REPOSITORY=v4.17.1
      - KERNEL_VERSION=4.17.1-041701
      - KERNEL_VERSION_C=201806111730
      - UNSIGNED_IMG=1
      - NEED_MODULES=1
  - os: linux
    sudo: required
    services:
      - docker
    compiler: gcc
    env:
      - SYSTEM_VERSION=bionic
      - REPOSITORY=v4.18.1
      - KERNEL_VERSION=4.18.1-041801
      - KERNEL_VERSION_C=201808151233
      - UNSIGNED_IMG=1
      - NEED_MODULES=1
      - export USE_QEMU=1

before_install:
  - docker pull ubuntu:${SYSTEM_VERSION}
  - docker ps -a
  - docker run --privileged -it -d -v ${PWD}:/sources -w /sources --name ubuntu ubuntu:${SYSTEM_VERSION} /bin/sh
  - export EXEC="docker exec ubuntu"
  - export SYSTEM_ARCH=amd64

install:
  - chmod +x ports/ci/travis/install_deps.sh
  - ports/ci/travis/install_deps.sh

script:
  - chmod +x ports/ci/travis/build.sh
  - ports/ci/travis/build.sh

#after_success:
#  - chmod +x ports/ci/travis/deploy.sh
#  - ports/ci/travis/deploy.sh

branches:
  only:
    - master

notifications:
  recipients:
    - hipersayan.x@gmail.com
  email:
    on_success: change
    on_failure: change
