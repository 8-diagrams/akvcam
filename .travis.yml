language: cpp

matrix:
  include:
  - os: linux
    sudo: required
    services:
      - docker
    compiler: gcc
    env:
      - SYSTEM_VERSION=xenial
      - REPOSITORY=v3.16.62
      - KERNEL_VERSION=3.16.62-031662
      - KERNEL_VERSION_C=201812170533
      - export USE_QEMU=1
  - os: linux
    sudo: required
    services:
      - docker
    compiler: gcc
    env:
      - SYSTEM_VERSION=xenial
      - REPOSITORY=v3.18.130
      - KERNEL_VERSION=3.18.130-0318130
      - KERNEL_VERSION_C=201812171049
      - export USE_QEMU=1
  - os: linux
    sudo: required
    services:
      - docker
    compiler: gcc
    env:
      - SYSTEM_VERSION=xenial
      - REPOSITORY=v4.4.167
      - KERNEL_VERSION=4.4.167-0404167
      - KERNEL_VERSION_C=201812130444
      - export USE_QEMU=1
  - os: linux
    sudo: required
    services:
      - docker
    compiler: gcc
    env:
      - SYSTEM_VERSION=bionic
      - REPOSITORY=v4.9.146
      - KERNEL_VERSION=4.9.146-0409146
      - KERNEL_VERSION_C=201812170932
      - export USE_QEMU=1
  - os: linux
    sudo: required
    services:
      - docker
    compiler: gcc
    env:
      - SYSTEM_VERSION=bionic
      - REPOSITORY=v4.14.89
      - KERNEL_VERSION=4.14.89-041489
      - KERNEL_VERSION_C=201812170432
      - UNSIGNED_IMG=1
      - NEED_MODULES=1
      - export USE_QEMU=1
  - os: linux
    sudo: required
    services:
      - docker
    compiler: gcc
    env:
      - SYSTEM_VERSION=disco
      - REPOSITORY=v4.18.20
      - KERNEL_VERSION=4.18.20-041820
      - KERNEL_VERSION_C=201812030624
      - UNSIGNED_IMG=1
      - NEED_MODULES=1
  - os: linux
    sudo: required
    services:
      - docker
    compiler: gcc
    env:
      - SYSTEM_VERSION=disco
      - REPOSITORY=v4.19.10
      - KERNEL_VERSION=4.19.10-041910
      - KERNEL_VERSION_C=201812170433
      - UNSIGNED_IMG=1
      - NEED_MODULES=1

before_install:
  - docker pull ubuntu:${SYSTEM_VERSION}
  - docker ps -a
  - docker run --privileged -it -d -v ${PWD}:/sources -w /sources --name ubuntu ubuntu:${SYSTEM_VERSION} /bin/sh
  - export EXEC="docker exec ubuntu"
  - export SYSTEM_ARCH=amd64

install:
  - chmod +x ports/ci/travis/install_deps.sh
  - ports/ci/travis/install_deps.sh

script:
  - chmod +x ports/ci/travis/build.sh
  - ports/ci/travis/build.sh

#after_success:
#  - chmod +x ports/ci/travis/deploy.sh
#  - ports/ci/travis/deploy.sh

branches:
  only:
    - master

notifications:
  recipients:
    - hipersayan.x@gmail.com
  email:
    on_success: change
    on_failure: change
